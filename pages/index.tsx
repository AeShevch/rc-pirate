import Head from "next/head";
import styles from "@/styles/Home.module.css";
import { Card, Space, Alert, Form, Input, Button } from "antd";
import { useState } from "react";

export type ParserFormFields = {
  url: string;
  containerSelector: string;
};

export default function Home() {
  const [form] = Form.useForm<ParserFormFields>();
  const [isLoading, setIsLoading] = useState<boolean>(false);
  const [errorMessage, setErrorMessage] = useState<string | null>(null);

  const getRichContent = async ({ url, containerSelector }: ParserFormFields) =>
    await fetch(
      `/api/parser?url=${url}&containerSelector=${containerSelector}`
    );

  const onSubmit = (formFields: ParserFormFields) => {
    setErrorMessage(null);
    setIsLoading(true);

    getRichContent(formFields)
      .then((res) => {
        console.log(res);

        if (res.err) {
          setErrorMessage(res.err);
        }
      })
      .finally(() => {
        setIsLoading(false);
      });
  };

  return (
    <>
      <Head>
        <title>üè¥‚Äç‚ò†Ô∏è Yo-ho-ho!</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <Card title="üè¥‚Äç‚ò†Ô∏è –ü–æ–ø—É—Ç–Ω—ã–π –≤–µ—Ç–µ—Ä!" style={{ width: "40rem" }}>
          <Form form={form} onFinish={onSubmit} layout="vertical">
            <Space direction="vertical" size={40} style={{ width: "100%" }}>
              <Alert
                message={
                  <>
                    ¬´–†–µ–∫–≤–∏–∑–∏—Ä–æ–≤–∞—Ç—å. –ú—ã —Ä–µ–∫–≤–∏–∑–∏—Ä—É–µ–º —ç—Ç–æ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç. –≠—Ç–æ –º–æ—Ä—Å–∫–æ–π
                    —Ç–µ—Ä–º–∏–Ω¬ª <br /> ‚Äì –î–∂–µ–∫ –í–æ—Ä–æ–±–µ–π
                  </>
                }
                type="info"
              />

              <div>
                <Form.Item
                  name="url"
                  label="–°—Å—ã–ª–∫–∞ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å ¬´—Ä–µ–∫–≤–∏–∑–∏—Ä—É–µ–º—ã–º¬ª –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º"
                  hasFeedback
                  rules={[
                    { required: true },
                    { type: "url", warningOnly: true },
                    {
                      type: "string",
                      min: 6,
                    },
                  ]}
                >
                  <Input
                    disabled={isLoading}
                    placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä, https://istyle.cz/macbook-pro-14-...-stribrny.html"
                  />
                </Form.Item>
                <Form.Item
                  name="containerSelector"
                  hasFeedback
                  label="html-c–µ–ª–µ–∫—Ç–æ—Ä –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞ c –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º (–ù–∞ istyle.cz —ç—Ç–æ –æ–±—ã—á–Ω–æ .block-static-block)"
                  initialValue=".block-static-block"
                  rules={[{ required: true }, { type: "string" }]}
                >
                  <Input disabled={isLoading} />
                </Form.Item>
              </div>

              {!!errorMessage && <Alert message={errorMessage} type="error" />}

              <Button type="primary" htmlType="submit" loading={isLoading}>
                ‚õµ –ü–æ–¥–Ω—è—Ç—å –ø–∞—Ä—É—Å–∞!
              </Button>
            </Space>
          </Form>
        </Card>
      </main>
    </>
  );
}
